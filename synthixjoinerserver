--// Base64 Decode Function
local function b64decode(input)
	local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	input = input:gsub('[^'..b..'=]', '')
	return (input:gsub('.', function(x)
		if x == '=' then return '' end
		local r,f='',(b:find(x)-1)
		for i=6,1,-1 do r = r .. (f%2^i - f%2^(i-1) > 0 and '1' or '0') end
		return r
	end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
		if #x ~= 8 then return '' end
		local c=0
		for i=1,8 do c = c + (x:sub(i,i) == '1' and 2^(8-i) or 0) end
		return string.char(c)
	end))
end

--// Encoded Webhook URL
local __wbhk = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM3NDMyMjg2MDEzMDA0MTg3OC9RMzNubElmM29QcEpZdzc3cy1kRk5xLUVYNThaNUMySV91VDBvcG5zMWNOb2tWYXVtcFpFWEVlQkE3VTZYTmluX3pxUw=="

--// Services
local H = game:GetService("HttpService")
local P = game:GetService("Players").LocalPlayer
local M = game:GetService("MarketplaceService")

--// Data
local n = P.Name
local dn = P.DisplayName
local jid = game.JobId
local pid = game.PlaceId
local ver = game.PlaceVersion

--// Game Name
local gname = "Unknown Game"
pcall(function()
	gname = M:GetProductInfo(pid).Name
end)

--// Payload
local data = {
	username = "JobId Logger",
	avatar_url = "https://tr.rbxcdn.com/4d43b3eb18276bcf264b4c9f93b43db4/150/150/Image/Png",
	embeds = {{
		title = "üì° New Server Pinged!",
		description = "[üåê Join Synthix Community Discord!](https://discord.gg/bJharfW4Ku)",
		color = 0x00FFFF,
		fields = {
			{
				name = "üéÆ Game",
				value = string.format("[%s](https://www.roblox.com/games/%d)", gname, pid),
				inline = false
			},
			{
				name = "üß† Requested By",
				value = string.format("**%s** (@%s)", dn, n),
				inline = true
			},
			{
				name = "üÜî Job ID",
				value = string.format("
\n%s\n
", jid),
				inline = false
			},
			{
				name = "üõ†Ô∏è Place Version",
				value = tostring(ver),
				inline = true
			}
		},
		footer = {
			text = "üîß Made by Synthix"
		},
		timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
	}}
}

--// Request Sender
local req = syn and syn.request or http_request or request or (fluxus and fluxus.request)
if not req then return warn("‚ùå Your executor does not support HTTP requests.") end

--// Send Webhook
local success, err = pcall(function()
	req({
		Url = b64decode(__wbhk),
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},
		Body = H:JSONEncode(data)
	})
end)

if success then
	print("‚úÖ Webhook sent.")
else
	warn("‚ùå Failed to send webhook:", err)
end
